<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>EatWhere</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f8f9fa;
      margin: 0;
      padding: 0;
    }
    header {
      background-color: #ff6f00;
      color: white;
      padding: 1rem;
      text-align: center;
      animation: fadeInDown 1s ease;
    }
    nav {
      background-color: #ff8f00;
      padding: 0.75rem;
      display: flex;
      justify-content: center;
      gap: 2rem;
      animation: fadeIn 1.5s ease;
    }
    nav a {
      color: white;
      text-decoration: none;
      font-weight: bold;
      transition: color 0.3s;
    }
    nav a:hover {
      color: #000;
    }
    .container {
      max-width: 1000px;
      margin: 2rem auto;
      padding: 1rem;
      animation: fadeInUp 1s ease;
    }
    .filters {
      background-color: #fff;
      padding: 1rem;
      border: 1px solid #ccc;
      border-radius: 12px;
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;
      margin-bottom: 2rem;
      animation: fadeIn 1.2s ease;
    }
    select, button {
      padding: 0.5rem;
      font-size: 1rem;
      border-radius: 12px;
      border: 1px solid #ccc;
      background-color: #fff;
    }
    button {
      background-color: #e3f2fd;
    }
    button:hover {
      background-color: #bbdefb;
      cursor: pointer;
    }
    .restaurant-card {
      background-color: white;
      border: 1px solid #ddd;
      border-radius: 8px;
      padding: 1rem;
      margin-bottom: 1.5rem;
      display: flex;
      gap: 1rem;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      animation: fadeSlideIn 0.8s ease forwards;
    }
    .restaurant-card img {
      width: 150px;
      height: 100px;
      object-fit: cover;
      border-radius: 8px;
    }
    .restaurant-info {
      flex-grow: 1;
    }
    .restaurant-name {
      font-size: 1.4rem;
      font-weight: bold;
      margin-bottom: 0.25rem;
    }
    .restaurant-info p {
      margin: 0.25rem 0;
    }
    .share-btns {
      display: flex;
      gap: 0.5rem;
      margin-top: 0.5rem;
    }
    .share-btns a img {
      width: 24px;
      height: 24px;
    }
    .share-btns a img:hover {
      transform: scale(1.4);
    }
    footer {
      text-align: center;
      padding: 1rem;
      background: #eee;
      animation: fadeInUp 1.5s ease;
      font-size: 0.9rem;
      color: #666;
    }
    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }
    @keyframes fadeInUp {
      from { transform: translateY(20px); opacity: 0; }
      to { transform: translateY(0); opacity: 1; }
    }
    @keyframes fadeInDown {
      from { transform: translateY(-20px); opacity: 0; }
      to { transform: translateY(0); opacity: 1; }
    }
    @keyframes fadeSlideIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }
    .no-results {
      text-align: center;
      padding: 2rem;
      background: #fff8e1;
      border-radius: 8px;
    }
    .no-results button {
      margin-top: 1rem;
      padding: 0.5rem 1rem;
      background: #ff6f00;
      color: white;
      border: none;
    }
    .error {
      color: #d32f2f;
      text-align: center;
    }
    .loading {
      text-align: center;
      padding: 1rem;
      font-style: italic;
      color: #666;
    }
  </style>
</head>
<body>
  <header>
    <h1>EatWhere üçú</h1>
    <p>Good food around you ‚Äì <strong>EatWhere.Food</strong></p>
  </header>
  <nav>
    <a href="/">Home</a>
    <a href="/explore">Explore</a>
    <a href="/about">About</a>
    <a href="/new">Add</a>
  </nav>

  <div class="container">
    <h2>Find Your Next Meal üçΩÔ∏è</h2>
    <div class="filters">
      <select id="filter-cuisine">
        <option value="">üç± All Cuisines</option>
        <% cuisines.forEach(cuisine => { %>
          <option value="<%= cuisine %>"><%= cuisine %></option>
        <% }); %>
      </select>

      <select id="filter-halal">
        <option value="">üïå Halal?</option>
        <option value="Yes">Yes</option>
        <option value="No">No</option>
      </select>

      <select id="filter-vegetarian">
        <option value="">üå± Vegetarian?</option>
        <option value="Yes">Yes</option>
        <option value="No">No</option>
      </select>

      <select id="filter-price">
        <option value="">üí∞ Price?</option>
        <option value="$ (<$10)">$ (<$10)</option>
        <option value="$$ ($10-$25)">$$ ($10-$25)</option>
        <option value="$$$ ($25-$50)">$$$ ($25-$50)</option>
        <option value="$$$$ (>$50)">$$$$ (>$50)</option>
      </select>

      <button onclick="filterRestaurants()">üîç Search</button>
      <button onclick="goLucky()">üé≤ Go Lucky!</button>
      <button onclick="clearFilters()">‚ùå Clear Filters</button>
    </div>

    <div id="restaurant-list"></div>
  </div>

  <footer>
    &copy; 2025 EatWhere.Food. All makan rights reserved.
    <p><em>This website is created for learning purposes only. The information provided here should not be considered professional advice. Please note that we make no guarantees regarding the accuracy, completeness, or reliability of the contents of this website. Any actions you take based on the contents of this website are at your own risk. We are not liable for any losses or damages incurred from the use of this website.</em></p>
  </footer>

  <script>
    let allRestaurants = [];
    let isLoading = false;

    async function fetchRestaurants() {
      try {
        isLoading = true;
        document.getElementById("restaurant-list").innerHTML = '<p class="loading">Loading restaurants...</p>';
        
        const res = await fetch('/api/restaurants');
        if (!res.ok) throw new Error('Failed to fetch restaurants');
        
        const data = await res.json();
        allRestaurants = data;
        return data;
      } catch (err) {
        console.error("‚ùå Fetch error:", err);
        document.getElementById("restaurant-list").innerHTML = `
          <p class="error">Failed to load restaurants. Please try again later.</p>
        `;
        return [];
      } finally {
        isLoading = false;
      }
    }

    function getFilteredRestaurants() {
      const cuisine = document.getElementById("filter-cuisine").value;
      const halal = document.getElementById("filter-halal").value;
      const vegetarian = document.getElementById("filter-vegetarian").value;
      const price = document.getElementById("filter-price").value;

      return allRestaurants.filter(restaurant => {
        const matchesCuisine = !cuisine || 
          (restaurant.Cuisine && restaurant.Cuisine.toLowerCase().includes(cuisine.toLowerCase()));
        
        const matchesHalal = !halal || 
          (restaurant.Halal && restaurant.Halal.toString().toLowerCase() === halal.toLowerCase());
        
        const matchesVegetarian = !vegetarian || 
          (restaurant.Vegetarian && restaurant.Vegetarian.toString().toLowerCase() === vegetarian.toLowerCase());
        
        const matchesPrice = !price || 
          (restaurant.Price && restaurant.Price.trim() === price);

        return matchesCuisine && matchesHalal && matchesVegetarian && matchesPrice;
      });
    }

    function renderList(data) {
      const container = document.getElementById("restaurant-list");
      if (!data || data.length === 0) {
        container.innerHTML = `
          <div class="no-results">
            <p>No restaurants found matching your criteria.</p>
            <button onclick="clearFilters()">Clear all filters</button>
          </div>
        `;
        return;
      }
      
      container.innerHTML = data.map(r => {
        const text = `Check out ${r.Name} at ${r.Location}! ${r.Cuisine}, Price: ${r.Price}, Review: ${r.Review || 'N/A'} ‚Äì via EatWhere.Food`;
        const wa = `https://wa.me/?text=${encodeURIComponent(text)}`;
        const tg = `https://t.me/share/url?url=${encodeURIComponent(text)}&text=${encodeURIComponent(text)}`;
        const fb = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(text)}`;

        return `
          <div class="restaurant-card">
            <img src="${r.Image_URL || 'https://via.placeholder.com/150'}" alt="${r.Name}" />
            <div class="restaurant-info">
              <div class="restaurant-name">${r.Name}</div>
              <p>${r.Cuisine || 'Unknown cuisine'} ‚Ä¢ üïå Halal: ${r.Halal || 'Unknown'} ‚Ä¢ üå± Vegetarian: ${r.Vegetarian || 'Unknown'}</p>
              <p>üìç ${r.Location || 'Location not specified'} ‚Ä¢ üí∞ ${r.Price || 'Price not available'} ‚Ä¢ üö∂ ${r.Distance || 'Distance not available'}</p>
              <p><em>Review:</em> ${r.Review || 'No reviews yet'}</p>
              <div class="share-btns">
                <a href="${wa}" target="_blank"><img src="https://cdn-icons-png.flaticon.com/512/733/733585.png" alt="WhatsApp"></a>
                <a href="${tg}" target="_blank"><img src="https://cdn-icons-png.flaticon.com/512/2111/2111646.png" alt="Telegram"></a>
                <a href="${fb}" target="_blank"><img src="https://cdn-icons-png.flaticon.com/512/733/733547.png" alt="Facebook"></a>
              </div>
            </div>
          </div>
        `;
      }).join('');
    }

    async function filterRestaurants() {
      if (isLoading) return;
      
      if (allRestaurants.length === 0) {
        await fetchRestaurants();
      }
      
      const results = getFilteredRestaurants();
      renderList(results);
    }

    async function goLucky() {
      if (isLoading) return;
      
      try {
        // Ensure we have restaurant data
        if (allRestaurants.length === 0) {
          await fetchRestaurants();
        }

        // Get filtered results
        const filtered = getFilteredRestaurants();
        
        // Handle case where no restaurants match filters
        if (filtered.length === 0) {
          document.getElementById("restaurant-list").innerHTML = `
            <div class="no-results">
              <p>No restaurants match all your filters.</p>
              <button onclick="clearFilters()">Clear filters</button>
            </div>
          `;
          return;
        }

        // Select random restaurant from filtered results
        const randomIndex = Math.floor(Math.random() * filtered.length);
        const luckyRestaurant = filtered[randomIndex];
        
        // Display the selected restaurant
        renderList([luckyRestaurant]);

        // Visual feedback
        const goLuckyBtn = document.querySelector('button[onclick="goLucky()"]');
        goLuckyBtn.textContent = "üéâ Lucky Pick!";
        setTimeout(() => {
          goLuckyBtn.textContent = "üé≤ Go Lucky!";
        }, 2000);

      } catch (error) {
        console.error("Error in goLucky:", error);
        document.getElementById("restaurant-list").innerHTML = `
          <p class="error">Oops! Something went wrong. Please try again.</p>
        `;
      }
    }

    function clearFilters() {
      document.getElementById("filter-cuisine").value = "";
      document.getElementById("filter-halal").value = "";
      document.getElementById("filter-vegetarian").value = "";
      document.getElementById("filter-price").value = "";
      document.getElementById("restaurant-list").innerHTML = "";
    }

    // Initialize on load
    window.onload = async () => {
      await fetchRestaurants();
    };
  </script>
</body>
</html>